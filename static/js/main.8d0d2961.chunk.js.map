{"version":3,"sources":["pics/pexels-logo-7e4af4630e66b6b786567041874586aeb1b5217589035c70a0def15aacd0f11a.png","pics/5cb4839d5f1b6d3fbadece7c.png","pics/Pixabay_new_logo.svg.png","components/header/header.jsx","components/searchbox/searchbox.jsx","components/resitem/listitem.jsx","components/reslist/reslist.jsx","components/footer/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","header","className","searchbox","changeterm","getdata","id","type","value","onClick","onSubmit","event","preventDefault","name","src","logo1","alt","logo2","logo3","listitem","result","style","backgroundImage","medium","photographer","reslist","results","length","map","footer","App","setState","searchterm","target","console","log","axios","get","state","headers","Authorization","then","res","data","photos","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,0G,mBCA3CD,EAAOC,QAAU,IAA0B,sD,mBCA3CD,EAAOC,QAAU,IAA0B,kD,0VCa5BC,MATf,WACI,OACI,yBAAKC,UAAU,iBACX,uBAAGA,UAAU,uBACb,sE,kECkCGC,MApCf,YAA6C,IAAD,EAAvBC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,QAM/B,OACE,yBAAKH,UAAU,aACb,yBAAKA,UAAU,cACb,0NACA,2qBAMF,yBAAKA,UAAU,mBACb,2BAAOI,GAAG,MAAMC,KAAK,SAASC,MAAM,2BAAOC,QAASJ,IAEpD,0BAAOK,SAlBK,SAAAC,GAChBA,EAAMC,iBACNP,MAiBM,8BAAOC,GAAG,SAASC,KAAK,SAASM,KAAK,QAAtC,mBAAgD,QAAhD,yBAAiET,GAAjE,KAGF,yBAAKF,UAAU,WACb,yBAAKY,IAAKC,IAAOC,IAAI,KACrB,yBAAKF,IAAKG,IAAOD,IAAI,KACrB,yBAAKF,IAAKI,IAAOF,IAAI,S,YCLhBG,MAzBf,YAA6B,IAAVC,EAAS,EAATA,OAQf,OAGI,yBAAKlB,UAAU,WAAWmB,MAAO,CAC7BC,gBAAgB,OAAD,OAASF,EAAON,IAAIS,OAApB,OAQd,2BAAIH,EAAOI,gBCcTC,MA9Bf,YAA6B,IAAXC,EAAU,EAAVA,QAGd,OAAIA,EAAQC,OAAS,EAGb,yBAAKzB,UAAU,qBAEdwB,EAAQE,KAAI,SAAAR,GAAM,OAAI,kBAAC,EAAD,CAAUA,OAAQA,QAajD,M,uBChBWS,MARf,WACI,OACI,yBAAK3B,UAAU,iBAAf,4DCoDO4B,E,YA/Cb,aAAe,IAAD,8BACZ,+CAOF1B,WAAa,SAAAO,GACX,EAAKoB,SAAS,CACZC,WAAYrB,EAAMsB,OAAOzB,SAVf,EAcdH,QAAU,WACR6B,QAAQC,IAAI,iBAQZC,IACGC,IADH,iDAE8C,EAAKC,MAAMN,WAFzD,uBAPa,CACXO,QAAS,CACPC,cACE,8DASHC,MAAK,SAAAC,GAAG,OAAI,EAAKX,SAAS,CAAEL,QAASgB,EAAIC,KAAKC,aA1BjD,EAAKN,MAAQ,CACXN,WAAY,QACZN,QAAS,IAJC,E,iFAgCZmB,KAAKxC,Y,+BAIL,OACE,yBAAKH,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWE,WAAYyC,KAAKzC,WAAYC,QAASwC,KAAKxC,UACtD,kBAAC,EAAD,CAAYqB,QAASmB,KAAKP,MAAMZ,UAChC,kBAAC,EAAD,W,GA1CUoB,aCGEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjB,MAAK,SAAAkB,GACjCA,EAAaC,kB","file":"static/js/main.8d0d2961.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pexels-logo-7e4af4630e66b6b786567041874586aeb1b5217589035c70a0def15aacd0f11a.c9014a62.png\";","module.exports = __webpack_public_path__ + \"static/media/5cb4839d5f1b6d3fbadece7c.e2742fc9.png\";","module.exports = __webpack_public_path__ + \"static/media/Pixabay_new_logo.svg.9c0832c5.png\";","import React from 'react'\r\nimport './header.css'\r\n\r\n\r\nfunction header() {\r\n    return (\r\n        <div className=\"header gerdak\">\r\n            <i className=\"fab fa-searchengin\"></i>\r\n            <h1>عکسنده</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default header\r\n","import React from \"react\";\r\nimport \"./searchbox.css\";\r\nimport logo1 from '../../pics/pexels-logo-7e4af4630e66b6b786567041874586aeb1b5217589035c70a0def15aacd0f11a.png';\r\nimport logo2 from '../../pics/5cb4839d5f1b6d3fbadece7c.png';\r\nimport logo3 from '../../pics/Pixabay_new_logo.svg.png';\r\n\r\nfunction searchbox({ changeterm, getdata }) {\r\n  const handlesub = event => {\r\n    event.preventDefault();\r\n    getdata();\r\n  };\r\n\r\n  return (\r\n    <div className=\"searchbox\">\r\n      <div className=\"sbt gerdak\">\r\n        <h3>موتور جستجوی عکس های رایگان و قانونی</h3>\r\n        <p>\r\n          عکسنده کلمه مورد نظر شما را در بین هزاران عکس جستجو میکند که به صورت\r\n          کاملا رایگان و قانونی می توانید در پروژه های خود استفاده کنید.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"inputbox gerdak\">\r\n        <input id=\"dok\" type=\"submit\" value=\"بسرچ\" onClick={getdata} />\r\n        \r\n        <form  onSubmit={handlesub}>\r\n          <input id=\"formak\" type=\"search\" name=\"term\" id=\"term\" onChange={changeterm} />\r\n        </form>\r\n\r\n        <div className=\"logobox\">\r\n          <img src={logo1} alt=\"\"/>\r\n          <img src={logo2} alt=\"\"/>\r\n          <img src={logo3} alt=\"\"/>\r\n\r\n        </div>\r\n      \r\n       \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default searchbox;\r\n","import React from 'react'\r\nimport './listitem.css';\r\nfunction listitem({result}) {\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        \r\n\r\n        <div className=\"listitem\" style={{\r\n            backgroundImage: `url(${result.src.medium})`\r\n            \r\n            \r\n        }}>\r\n\r\n            \r\n\r\n\r\n             <p>{result.photographer}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default listitem;\r\n","import React from 'react'\r\nimport './reslist.css'\r\nimport Listitem from '../resitem/listitem'\r\n\r\n\r\n\r\nfunction reslist({results}) {\r\n\r\n\r\n    if (results.length > 0) {\r\n\r\n        return (\r\n            <div className=\"natayejbox gerdak\">\r\n            \r\n            {results.map(result => <Listitem result={result} />)}\r\n            \r\n    \r\n    \r\n            </div>\r\n        )\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        \r\n\r\n    null\r\n\r\n    );\r\n\r\n\r\n\r\n    \r\n}\r\n\r\nexport default reslist\r\n","import React from 'react'\r\nimport './footer.css'\r\n\r\nfunction footer() {\r\n    return (\r\n        <div className=\"footer gerdak\">\r\n            خوب دیزاین\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default footer\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Header from \"./components/header/header\";\nimport Searchbox from \"./components/searchbox/searchbox\";\nimport Natayejbox from \"./components/reslist/reslist\";\nimport axios from \"axios\";\nimport Footer from \"./components/footer/footer\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      searchterm: \"kitty\",\n      results: []\n    };\n  }\n\n  changeterm = event => {\n    this.setState({\n      searchterm: event.target.value\n    });\n  };\n\n  getdata = () => {\n    console.log(\"getdata fired\");\n    var config = {\n      headers: {\n        Authorization:\n          \"563492ad6f917000010000010295795a8c084f6da2ef7158100d8e5b\"\n      }\n    };\n\n    axios\n      .get(\n        `https://api.pexels.com/v1/search?query=${this.state.searchterm}&per_page=12&page=1`,\n        config\n      )\n      .then(res => this.setState({ results: res.data.photos }));\n  };\n\n  componentDidMount() {\n    this.getdata();\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Searchbox changeterm={this.changeterm} getdata={this.getdata} />\n        <Natayejbox results={this.state.results} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/fontiran.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}